{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "copyrighted-buffalo",
   "metadata": {},
   "source": [
    "## Single-Cell Analysis (3):\n",
    "- Cell type: Induced Pluripotent stem cell (iPSC)\n",
    "- Title: \"iPSCs Reveal Protective Modifiers of the BMPR2 mutation in Pulmonary Arterial Hypertension\"\n",
    "- Data: ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "brazilian-optimization",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: scprep in /root/.local/lib/python3.8/site-packages (1.1.0)\n",
      "Requirement already satisfied: packaging in /opt/python/lib/python3.8/site-packages (from scprep) (20.8)\n",
      "Requirement already satisfied: scikit-learn>=0.19.1 in /opt/python/lib/python3.8/site-packages (from scprep) (0.24.0)\n",
      "Requirement already satisfied: scipy>=0.18.1 in /opt/python/lib/python3.8/site-packages (from scprep) (1.6.0)\n",
      "Requirement already satisfied: pandas>=0.25 in /opt/python/lib/python3.8/site-packages (from scprep) (1.2.0)\n",
      "Requirement already satisfied: decorator>=4.3.0 in /opt/python/lib/python3.8/site-packages (from scprep) (4.4.2)\n",
      "Requirement already satisfied: numpy>=1.12.0 in /opt/python/lib/python3.8/site-packages (from scprep) (1.19.5)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /opt/python/lib/python3.8/site-packages (from pandas>=0.25->scprep) (2.8.1)\n",
      "Requirement already satisfied: pytz>=2017.3 in /opt/python/lib/python3.8/site-packages (from pandas>=0.25->scprep) (2020.5)\n",
      "Requirement already satisfied: six>=1.5 in /opt/python/lib/python3.8/site-packages (from python-dateutil>=2.7.3->pandas>=0.25->scprep) (1.15.0)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /opt/python/lib/python3.8/site-packages (from scikit-learn>=0.19.1->scprep) (2.1.0)\n",
      "Requirement already satisfied: joblib>=0.11 in /opt/python/lib/python3.8/site-packages (from scikit-learn>=0.19.1->scprep) (1.0.0)\n",
      "Requirement already satisfied: pyparsing>=2.0.2 in /opt/python/lib/python3.8/site-packages (from packaging->scprep) (2.4.7)\n",
      "\u001b[33mWARNING: You are using pip version 20.3.3; however, version 21.0.1 is available.\n",
      "You should consider upgrading via the '/opt/python/bin/python3.8 -m pip install --upgrade pip' command.\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install --user scprep"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "stainless-determination",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: matplotlib in /opt/python/lib/python3.8/site-packages (3.3.3)\n",
      "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /opt/python/lib/python3.8/site-packages (from matplotlib) (2.4.7)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/python/lib/python3.8/site-packages (from matplotlib) (1.3.1)\n",
      "Requirement already satisfied: numpy>=1.15 in /opt/python/lib/python3.8/site-packages (from matplotlib) (1.19.5)\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/python/lib/python3.8/site-packages (from matplotlib) (0.10.0)\n",
      "Requirement already satisfied: python-dateutil>=2.1 in /opt/python/lib/python3.8/site-packages (from matplotlib) (2.8.1)\n",
      "Requirement already satisfied: pillow>=6.2.0 in /opt/python/lib/python3.8/site-packages (from matplotlib) (8.1.0)\n",
      "Requirement already satisfied: six in /opt/python/lib/python3.8/site-packages (from cycler>=0.10->matplotlib) (1.15.0)\n",
      "\u001b[33mWARNING: You are using pip version 20.3.3; however, version 21.0.1 is available.\n",
      "You should consider upgrading via the '/opt/python/bin/python3.8 -m pip install --upgrade pip' command.\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "sunrise-uruguay",
   "metadata": {},
   "outputs": [],
   "source": [
    "import scprep\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "lesbian-contribution",
   "metadata": {},
   "source": [
    "## iPSC Data analysis:\n",
    "- https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE79613 \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "controlling-denver",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>5S_rRNA</th>\n",
       "      <th>7SK</th>\n",
       "      <th>A1BG</th>\n",
       "      <th>A1BG-AS1</th>\n",
       "      <th>A1CF</th>\n",
       "      <th>A2M</th>\n",
       "      <th>A2M-AS1</th>\n",
       "      <th>A2ML1</th>\n",
       "      <th>A2MP1</th>\n",
       "      <th>A3GALT2</th>\n",
       "      <th>A4GALT</th>\n",
       "      <th>AAAS</th>\n",
       "      <th>AACS</th>\n",
       "      <th>AADAC</th>\n",
       "      <th>AADACL2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P1</th>\n",
       "      <td>3.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3666.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>206.0</td>\n",
       "      <td>997.0</td>\n",
       "      <td>759.0</td>\n",
       "      <td>129.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_HPAH</th>\n",
       "      <td>1.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>625.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>559.0</td>\n",
       "      <td>729.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Carrier</th>\n",
       "      <td>2.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>330.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>685.0</td>\n",
       "      <td>922.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Carrier</th>\n",
       "      <td>5.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>244.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>424.0</td>\n",
       "      <td>1219.0</td>\n",
       "      <td>367.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Carrier</th>\n",
       "      <td>6.0</td>\n",
       "      <td>119.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7460.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>143.0</td>\n",
       "      <td>767.0</td>\n",
       "      <td>915.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2801.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>134.0</td>\n",
       "      <td>661.0</td>\n",
       "      <td>1126.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>126.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>1346.0</td>\n",
       "      <td>1378.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Ctrl</th>\n",
       "      <td>5.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>247.0</td>\n",
       "      <td>819.0</td>\n",
       "      <td>532.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Ctrl</th>\n",
       "      <td>1.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19151.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>401.0</td>\n",
       "      <td>706.0</td>\n",
       "      <td>810.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_HPAH</th>\n",
       "      <td>1.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12405.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>208.0</td>\n",
       "      <td>670.0</td>\n",
       "      <td>760.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Ctrl</th>\n",
       "      <td>1.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20517.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>211.0</td>\n",
       "      <td>790.0</td>\n",
       "      <td>776.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              5S_rRNA    7SK  A1BG  A1BG-AS1  A1CF      A2M  A2M-AS1  A2ML1  \\\n",
       "Fam1_HPAH_P1      3.0  115.0   3.0      59.0   0.0   3666.0     37.0    1.0   \n",
       "Fam3_HPAH         1.0   73.0   3.0      55.0   0.0    625.0      1.0    0.0   \n",
       "Fam3_Carrier      2.0   82.0   5.0      30.0   0.0    330.0      8.0    1.0   \n",
       "Fam1_Carrier      5.0  125.0   1.0      24.0   0.0    244.0     12.0    2.0   \n",
       "Fam2_Carrier      6.0  119.0   0.0      55.0   0.0   7460.0     11.0    0.0   \n",
       "Fam1_HPAH_P3      1.0   71.0  11.0      65.0   0.0   2801.0      1.0    1.0   \n",
       "Fam1_HPAH_P2      1.0  100.0   7.0     103.0   0.0    126.0     16.0    2.0   \n",
       "Fam1_Ctrl         5.0   74.0   6.0      58.0   0.0     13.0      1.0    0.0   \n",
       "Fam2_Ctrl         1.0  150.0   4.0      70.0   0.0  19151.0      6.0    1.0   \n",
       "Fam2_HPAH         1.0  145.0   5.0      15.0   0.0  12405.0      6.0    0.0   \n",
       "Fam3_Ctrl         1.0  102.0   5.0      73.0   1.0  20517.0      4.0    0.0   \n",
       "\n",
       "              A2MP1  A3GALT2  A4GALT    AAAS    AACS  AADAC  AADACL2  \n",
       "Fam1_HPAH_P1   17.0      0.0   206.0   997.0   759.0  129.0      1.0  \n",
       "Fam3_HPAH       1.0      0.0    86.0   559.0   729.0    6.0      1.0  \n",
       "Fam3_Carrier    1.0      0.0   146.0   685.0   922.0   20.0      0.0  \n",
       "Fam1_Carrier    0.0      0.0   424.0  1219.0   367.0    0.0      0.0  \n",
       "Fam2_Carrier    0.0      1.0   143.0   767.0   915.0   60.0      1.0  \n",
       "Fam1_HPAH_P3    0.0      0.0   134.0   661.0  1126.0   48.0      0.0  \n",
       "Fam1_HPAH_P2    0.0      0.0   153.0  1346.0  1378.0   20.0      0.0  \n",
       "Fam1_Ctrl       0.0      1.0   247.0   819.0   532.0    2.0      0.0  \n",
       "Fam2_Ctrl       2.0      0.0   401.0   706.0   810.0    5.0      0.0  \n",
       "Fam2_HPAH       0.0      0.0   208.0   670.0   760.0   21.0      0.0  \n",
       "Fam3_Ctrl       0.0      0.0   211.0   790.0   776.0    8.0      0.0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iPSC_file_read = scprep.io.load_csv('Desktop/GSE79613_RNA-seq_raw_read_counts.csv', delimiter = '\\t', gene_names=True, sparse=True)\n",
    "#iPSC_file_read = scprep.io.load_csv('Desktop/Projects/School/iPSC/GSE154580_rpm.bcmatrix copy.csv', delimiter='\\t', gene_names=True, sparse=True)\n",
    "iPSC_file_read.head(15).T"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "daily-milwaukee",
   "metadata": {},
   "source": [
    "### Preprocessing/ Loading/ Filtering\n",
    "#### Normalization: \n",
    "- align the scales of gene expression across cells that have different # of UMIs / cell.\n",
    "- The sum of expression values for each cell sums to 1 then returns normalized matrix to the metric space using median UMI count per cell effectively scaling all cells as if they were sampled evenly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dominant-fortune",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/root/.local/lib/python3.8/site-packages/scprep/select.py:369: UserWarning: No selection conditions provided. Returning all columns.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>5S_rRNA</th>\n",
       "      <th>7SK</th>\n",
       "      <th>A1BG</th>\n",
       "      <th>A1BG-AS1</th>\n",
       "      <th>A1CF</th>\n",
       "      <th>A2M</th>\n",
       "      <th>A2M-AS1</th>\n",
       "      <th>A2ML1</th>\n",
       "      <th>A2MP1</th>\n",
       "      <th>A3GALT2</th>\n",
       "      <th>...</th>\n",
       "      <th>hsa-mir-8072</th>\n",
       "      <th>snR65</th>\n",
       "      <th>snoR442</th>\n",
       "      <th>snoU109</th>\n",
       "      <th>snoU13</th>\n",
       "      <th>snoU2-30</th>\n",
       "      <th>snoU2_19</th>\n",
       "      <th>snoZ13_snr52</th>\n",
       "      <th>snoZ185</th>\n",
       "      <th>snoZ5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P1</th>\n",
       "      <td>3.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3666.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>19.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_HPAH</th>\n",
       "      <td>1.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>625.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Carrier</th>\n",
       "      <td>2.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>330.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Carrier</th>\n",
       "      <td>5.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>244.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Carrier</th>\n",
       "      <td>6.0</td>\n",
       "      <td>119.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7460.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2801.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>126.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Ctrl</th>\n",
       "      <td>5.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Ctrl</th>\n",
       "      <td>1.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19151.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>113.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_HPAH</th>\n",
       "      <td>1.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12405.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Ctrl</th>\n",
       "      <td>1.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20517.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11 rows × 34706 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              5S_rRNA    7SK  A1BG  A1BG-AS1  A1CF      A2M  A2M-AS1  A2ML1  \\\n",
       "Fam1_HPAH_P1      3.0  115.0   3.0      59.0   0.0   3666.0     37.0    1.0   \n",
       "Fam3_HPAH         1.0   73.0   3.0      55.0   0.0    625.0      1.0    0.0   \n",
       "Fam3_Carrier      2.0   82.0   5.0      30.0   0.0    330.0      8.0    1.0   \n",
       "Fam1_Carrier      5.0  125.0   1.0      24.0   0.0    244.0     12.0    2.0   \n",
       "Fam2_Carrier      6.0  119.0   0.0      55.0   0.0   7460.0     11.0    0.0   \n",
       "Fam1_HPAH_P3      1.0   71.0  11.0      65.0   0.0   2801.0      1.0    1.0   \n",
       "Fam1_HPAH_P2      1.0  100.0   7.0     103.0   0.0    126.0     16.0    2.0   \n",
       "Fam1_Ctrl         5.0   74.0   6.0      58.0   0.0     13.0      1.0    0.0   \n",
       "Fam2_Ctrl         1.0  150.0   4.0      70.0   0.0  19151.0      6.0    1.0   \n",
       "Fam2_HPAH         1.0  145.0   5.0      15.0   0.0  12405.0      6.0    0.0   \n",
       "Fam3_Ctrl         1.0  102.0   5.0      73.0   1.0  20517.0      4.0    0.0   \n",
       "\n",
       "              A2MP1  A3GALT2  ...  hsa-mir-8072  snR65  snoR442  snoU109  \\\n",
       "Fam1_HPAH_P1   17.0      0.0  ...          19.0    1.0      0.0     15.0   \n",
       "Fam3_HPAH       1.0      0.0  ...           7.0    0.0      0.0      8.0   \n",
       "Fam3_Carrier    1.0      0.0  ...           5.0    0.0      0.0     20.0   \n",
       "Fam1_Carrier    0.0      0.0  ...          28.0    0.0      1.0      5.0   \n",
       "Fam2_Carrier    0.0      1.0  ...           6.0    0.0      1.0      7.0   \n",
       "Fam1_HPAH_P3    0.0      0.0  ...          18.0    0.0      1.0     15.0   \n",
       "Fam1_HPAH_P2    0.0      0.0  ...           7.0    0.0      1.0     15.0   \n",
       "Fam1_Ctrl       0.0      1.0  ...           7.0    0.0      1.0     10.0   \n",
       "Fam2_Ctrl       2.0      0.0  ...           6.0    0.0      0.0     40.0   \n",
       "Fam2_HPAH       0.0      0.0  ...           3.0    1.0      1.0      5.0   \n",
       "Fam3_Ctrl       0.0      0.0  ...           8.0    0.0      0.0     27.0   \n",
       "\n",
       "              snoU13  snoU2-30  snoU2_19  snoZ13_snr52  snoZ185  snoZ5  \n",
       "Fam1_HPAH_P1   133.0      37.0      52.0           0.0      0.0    0.0  \n",
       "Fam3_HPAH       57.0      19.0      25.0           1.0      0.0    0.0  \n",
       "Fam3_Carrier    71.0      27.0      35.0           0.0      0.0    4.0  \n",
       "Fam1_Carrier   174.0      53.0      70.0           0.0      0.0    2.0  \n",
       "Fam2_Carrier    97.0      63.0     104.0           0.0      0.0    0.0  \n",
       "Fam1_HPAH_P3   104.0      28.0      49.0           0.0      2.0    0.0  \n",
       "Fam1_HPAH_P2   141.0      71.0     118.0           0.0      0.0    0.0  \n",
       "Fam1_Ctrl      123.0      19.0      24.0           0.0      0.0    0.0  \n",
       "Fam2_Ctrl      113.0      25.0      31.0           0.0      0.0    2.0  \n",
       "Fam2_HPAH       62.0      19.0      32.0           0.0      0.0    1.0  \n",
       "Fam3_Ctrl      102.0      24.0      48.0           0.0      0.0    5.0  \n",
       "\n",
       "[11 rows x 34706 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#iPSC_data = scprep.filter.filter_library_size(iPSC_file_read, cutoff=0.01, keep_cells='above')\n",
    "iPSC_data = scprep.filter.filter_gene_set_expression(iPSC_file_read, cutoff=0.01, library_size_normalize=True, keep_cells='above').T\n",
    "iPSC_data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "electronic-tamil",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/root/.local/lib/python3.8/site-packages/scprep/select.py:369: UserWarning: No selection conditions provided. Returning all columns.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Fam1_HPAH_P1</th>\n",
       "      <th>Fam3_HPAH</th>\n",
       "      <th>Fam3_Carrier</th>\n",
       "      <th>Fam1_Carrier</th>\n",
       "      <th>Fam2_Carrier</th>\n",
       "      <th>Fam1_HPAH_P3</th>\n",
       "      <th>Fam1_HPAH_P2</th>\n",
       "      <th>Fam1_Ctrl</th>\n",
       "      <th>Fam2_Ctrl</th>\n",
       "      <th>Fam2_HPAH</th>\n",
       "      <th>Fam3_Ctrl</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5S_rRNA</th>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7SK</th>\n",
       "      <td>115.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>119.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>102.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A1BG</th>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A1BG-AS1</th>\n",
       "      <td>59.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>73.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A1CF</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoU2-30</th>\n",
       "      <td>37.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoU2_19</th>\n",
       "      <td>52.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoZ13_snr52</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoZ185</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoZ5</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34706 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Fam1_HPAH_P1  Fam3_HPAH  Fam3_Carrier  Fam1_Carrier  \\\n",
       "id                                                                  \n",
       "5S_rRNA                3.0        1.0           2.0           5.0   \n",
       "7SK                  115.0       73.0          82.0         125.0   \n",
       "A1BG                   3.0        3.0           5.0           1.0   \n",
       "A1BG-AS1              59.0       55.0          30.0          24.0   \n",
       "A1CF                   0.0        0.0           0.0           0.0   \n",
       "...                    ...        ...           ...           ...   \n",
       "snoU2-30              37.0       19.0          27.0          53.0   \n",
       "snoU2_19              52.0       25.0          35.0          70.0   \n",
       "snoZ13_snr52           0.0        1.0           0.0           0.0   \n",
       "snoZ185                0.0        0.0           0.0           0.0   \n",
       "snoZ5                  0.0        0.0           4.0           2.0   \n",
       "\n",
       "              Fam2_Carrier  Fam1_HPAH_P3  Fam1_HPAH_P2  Fam1_Ctrl  Fam2_Ctrl  \\\n",
       "id                                                                             \n",
       "5S_rRNA                6.0           1.0           1.0        5.0        1.0   \n",
       "7SK                  119.0          71.0         100.0       74.0      150.0   \n",
       "A1BG                   0.0          11.0           7.0        6.0        4.0   \n",
       "A1BG-AS1              55.0          65.0         103.0       58.0       70.0   \n",
       "A1CF                   0.0           0.0           0.0        0.0        0.0   \n",
       "...                    ...           ...           ...        ...        ...   \n",
       "snoU2-30              63.0          28.0          71.0       19.0       25.0   \n",
       "snoU2_19             104.0          49.0         118.0       24.0       31.0   \n",
       "snoZ13_snr52           0.0           0.0           0.0        0.0        0.0   \n",
       "snoZ185                0.0           2.0           0.0        0.0        0.0   \n",
       "snoZ5                  0.0           0.0           0.0        0.0        2.0   \n",
       "\n",
       "              Fam2_HPAH  Fam3_Ctrl  \n",
       "id                                  \n",
       "5S_rRNA             1.0        1.0  \n",
       "7SK               145.0      102.0  \n",
       "A1BG                5.0        5.0  \n",
       "A1BG-AS1           15.0       73.0  \n",
       "A1CF                0.0        1.0  \n",
       "...                 ...        ...  \n",
       "snoU2-30           19.0       24.0  \n",
       "snoU2_19           32.0       48.0  \n",
       "snoZ13_snr52        0.0        0.0  \n",
       "snoZ185             0.0        0.0  \n",
       "snoZ5               1.0        5.0  \n",
       "\n",
       "[34706 rows x 11 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iPSC_data_T = scprep.filter.filter_gene_set_expression(iPSC_file_read, cutoff=0.01, library_size_normalize=True, keep_cells='above')\n",
    "iPSC_data_T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ready-bridal",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "genes_per_cell = np.sum(iPSC_data > 0, axis=0)\n",
    "\n",
    "fig, ax = plt.subplots(1, figsize=(8,8))\n",
    "ax.hist(genes_per_cell, bins=50)\n",
    "ax.set_xlabel('Count Depth')\n",
    "ax.set_ylabel('Frequency')\n",
    "ax.set_yscale('symlog')\n",
    "ax.set_title('Gene detection across cells')\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abroad-stage",
   "metadata": {},
   "source": [
    "#### Removing cells with high mitochondrial gene expression (Quality Control)\n",
    "# Error: try again after rescaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "challenging-distance",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Mitochondrial expression')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# get mitochondrial genes\n",
    "mitochondrial_gene_list = np.array([g.startswith('MT') for g in iPSC_data.columns])\n",
    "mitochondrial_gene_list\n",
    "#mitochondrial_gene_list\n",
    "\n",
    "# get expression\n",
    "mito_exp = iPSC_data.loc[:,mitochondrial_gene_list].mean(axis=1)\n",
    "\n",
    "# plotting\n",
    "fig, ax = plt.subplots(1, figsize=(6,6))\n",
    "\n",
    "ax.hist(mito_exp, bins=45)\n",
    "ax.axvline(np.percentile(mito_exp, 90), color= 'red')\n",
    "ax.set_xlabel('Mean mitochondrial expression')\n",
    "ax.set_ylabel('# of cells')\n",
    "ax.set_title('Mitochondrial expression')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "prescribed-north",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "genes_per_cell = np.sum(iPSC_data_T > 0)\n",
    "\n",
    "fig, ax = plt.subplots(1, figsize=(8,8))\n",
    "ax.hist(iPSC_data_T, bins=50)\n",
    "ax.set_xlabel('Genes')\n",
    "ax.set_ylabel('Frequency')\n",
    "ax.set_yscale('symlog')\n",
    "ax.set_title('Gene detection across Samples')\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "spoken-calculation",
   "metadata": {},
   "source": [
    "## Figure A"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "robust-times",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "iPSC_data_T_log = scprep.transform.log(iPSC_data_T)\n",
    "\n",
    "genes_per_cell = np.sum(iPSC_data_T_log > 0)\n",
    "\n",
    "fig, ax = plt.subplots(1, figsize=(8,8))\n",
    "ax.hist(iPSC_data_T_log, bins=50)\n",
    "ax.set_xlabel('Genes')\n",
    "ax.set_ylabel('Frequency')\n",
    "ax.set_yscale('symlog')\n",
    "ax.set_title('Gene detection across Samples')\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "consecutive-professional",
   "metadata": {},
   "source": [
    "## Figure B "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "opening-collective",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Mitochondrial expression')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# get mitochondrial genes\n",
    "mitochondrial_gene_list = np.array([g.startswith('MT') for g in iPSC_data.columns])\n",
    "mitochondrial_gene_list\n",
    "#mitochondrial_gene_list\n",
    "\n",
    "# get expression\n",
    "mito_exp = iPSC_data.loc[:,mitochondrial_gene_list].mean(axis=1)\n",
    "\n",
    "# plotting\n",
    "fig, ax = plt.subplots(1, figsize=(6,5))\n",
    "\n",
    "ax.hist(mito_exp, bins=10)\n",
    "ax.axvline(np.percentile(mito_exp, 90), color = 'red')\n",
    "ax.set_xlabel('Mean mitochondrial expression')\n",
    "ax.set_ylabel('# of cells')\n",
    "ax.set_title('Mitochondrial expression')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "noticed-representation",
   "metadata": {},
   "source": [
    "#### Transforming the data\n",
    "- The purpose of transforming data is to make sure that each gene or feature in our counts matrix is counted equally. \n",
    "- Genes that are more highly expressed (i.e. have larger values) will be considered more important and will have a larger impact on downstream analysis.\n",
    "    - Many Transform options: scprep.transform.log(), scprep.transform.sqrt() or scprep.transform.arcsinh()."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "illegal-timber",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>5S_rRNA</th>\n",
       "      <th>7SK</th>\n",
       "      <th>A1BG</th>\n",
       "      <th>A1BG-AS1</th>\n",
       "      <th>A1CF</th>\n",
       "      <th>A2M</th>\n",
       "      <th>A2M-AS1</th>\n",
       "      <th>A2ML1</th>\n",
       "      <th>A2MP1</th>\n",
       "      <th>A3GALT2</th>\n",
       "      <th>...</th>\n",
       "      <th>hsa-mir-8072</th>\n",
       "      <th>snR65</th>\n",
       "      <th>snoR442</th>\n",
       "      <th>snoU109</th>\n",
       "      <th>snoU13</th>\n",
       "      <th>snoU2-30</th>\n",
       "      <th>snoU2_19</th>\n",
       "      <th>snoZ13_snr52</th>\n",
       "      <th>snoZ185</th>\n",
       "      <th>snoZ5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P1</th>\n",
       "      <td>1.732051</td>\n",
       "      <td>10.723805</td>\n",
       "      <td>1.732051</td>\n",
       "      <td>7.681146</td>\n",
       "      <td>0.0</td>\n",
       "      <td>60.547502</td>\n",
       "      <td>6.082763</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.123106</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.358899</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.872983</td>\n",
       "      <td>11.532563</td>\n",
       "      <td>6.082763</td>\n",
       "      <td>7.211103</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_HPAH</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>8.544004</td>\n",
       "      <td>1.732051</td>\n",
       "      <td>7.416198</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.645751</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.828427</td>\n",
       "      <td>7.549834</td>\n",
       "      <td>4.358899</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Carrier</th>\n",
       "      <td>1.414214</td>\n",
       "      <td>9.055385</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>5.477226</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.165902</td>\n",
       "      <td>2.828427</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.472136</td>\n",
       "      <td>8.426150</td>\n",
       "      <td>5.196152</td>\n",
       "      <td>5.916080</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Carrier</th>\n",
       "      <td>2.236068</td>\n",
       "      <td>11.180340</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.898979</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.620499</td>\n",
       "      <td>3.464102</td>\n",
       "      <td>1.414214</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.291503</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>13.190906</td>\n",
       "      <td>7.280110</td>\n",
       "      <td>8.366600</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.414214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Carrier</th>\n",
       "      <td>2.449490</td>\n",
       "      <td>10.908712</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.416198</td>\n",
       "      <td>0.0</td>\n",
       "      <td>86.371292</td>\n",
       "      <td>3.316625</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.449490</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.645751</td>\n",
       "      <td>9.848858</td>\n",
       "      <td>7.937254</td>\n",
       "      <td>10.198039</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P3</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>8.426150</td>\n",
       "      <td>3.316625</td>\n",
       "      <td>8.062258</td>\n",
       "      <td>0.0</td>\n",
       "      <td>52.924474</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.242641</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.872983</td>\n",
       "      <td>10.198039</td>\n",
       "      <td>5.291503</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.414214</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P2</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>2.645751</td>\n",
       "      <td>10.148892</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.224972</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.414214</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.645751</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.872983</td>\n",
       "      <td>11.874342</td>\n",
       "      <td>8.426150</td>\n",
       "      <td>10.862780</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Ctrl</th>\n",
       "      <td>2.236068</td>\n",
       "      <td>8.602325</td>\n",
       "      <td>2.449490</td>\n",
       "      <td>7.615773</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.605551</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.645751</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.162278</td>\n",
       "      <td>11.090537</td>\n",
       "      <td>4.358899</td>\n",
       "      <td>4.898979</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Ctrl</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>12.247449</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>8.366600</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.387138</td>\n",
       "      <td>2.449490</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.414214</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.449490</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.324555</td>\n",
       "      <td>10.630146</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.567764</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.414214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_HPAH</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>12.041595</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>3.872983</td>\n",
       "      <td>0.0</td>\n",
       "      <td>111.377736</td>\n",
       "      <td>2.449490</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.732051</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>7.874008</td>\n",
       "      <td>4.358899</td>\n",
       "      <td>5.656854</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Ctrl</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.099505</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>8.544004</td>\n",
       "      <td>1.0</td>\n",
       "      <td>143.237565</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.828427</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.196152</td>\n",
       "      <td>10.099505</td>\n",
       "      <td>4.898979</td>\n",
       "      <td>6.928203</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.236068</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11 rows × 34706 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               5S_rRNA        7SK      A1BG   A1BG-AS1  A1CF         A2M  \\\n",
       "Fam1_HPAH_P1  1.732051  10.723805  1.732051   7.681146   0.0   60.547502   \n",
       "Fam3_HPAH     1.000000   8.544004  1.732051   7.416198   0.0   25.000000   \n",
       "Fam3_Carrier  1.414214   9.055385  2.236068   5.477226   0.0   18.165902   \n",
       "Fam1_Carrier  2.236068  11.180340  1.000000   4.898979   0.0   15.620499   \n",
       "Fam2_Carrier  2.449490  10.908712  0.000000   7.416198   0.0   86.371292   \n",
       "Fam1_HPAH_P3  1.000000   8.426150  3.316625   8.062258   0.0   52.924474   \n",
       "Fam1_HPAH_P2  1.000000  10.000000  2.645751  10.148892   0.0   11.224972   \n",
       "Fam1_Ctrl     2.236068   8.602325  2.449490   7.615773   0.0    3.605551   \n",
       "Fam2_Ctrl     1.000000  12.247449  2.000000   8.366600   0.0  138.387138   \n",
       "Fam2_HPAH     1.000000  12.041595  2.236068   3.872983   0.0  111.377736   \n",
       "Fam3_Ctrl     1.000000  10.099505  2.236068   8.544004   1.0  143.237565   \n",
       "\n",
       "               A2M-AS1     A2ML1     A2MP1  A3GALT2  ...  hsa-mir-8072  snR65  \\\n",
       "Fam1_HPAH_P1  6.082763  1.000000  4.123106      0.0  ...      4.358899    1.0   \n",
       "Fam3_HPAH     1.000000  0.000000  1.000000      0.0  ...      2.645751    0.0   \n",
       "Fam3_Carrier  2.828427  1.000000  1.000000      0.0  ...      2.236068    0.0   \n",
       "Fam1_Carrier  3.464102  1.414214  0.000000      0.0  ...      5.291503    0.0   \n",
       "Fam2_Carrier  3.316625  0.000000  0.000000      1.0  ...      2.449490    0.0   \n",
       "Fam1_HPAH_P3  1.000000  1.000000  0.000000      0.0  ...      4.242641    0.0   \n",
       "Fam1_HPAH_P2  4.000000  1.414214  0.000000      0.0  ...      2.645751    0.0   \n",
       "Fam1_Ctrl     1.000000  0.000000  0.000000      1.0  ...      2.645751    0.0   \n",
       "Fam2_Ctrl     2.449490  1.000000  1.414214      0.0  ...      2.449490    0.0   \n",
       "Fam2_HPAH     2.449490  0.000000  0.000000      0.0  ...      1.732051    1.0   \n",
       "Fam3_Ctrl     2.000000  0.000000  0.000000      0.0  ...      2.828427    0.0   \n",
       "\n",
       "              snoR442   snoU109     snoU13  snoU2-30   snoU2_19  snoZ13_snr52  \\\n",
       "Fam1_HPAH_P1      0.0  3.872983  11.532563  6.082763   7.211103           0.0   \n",
       "Fam3_HPAH         0.0  2.828427   7.549834  4.358899   5.000000           1.0   \n",
       "Fam3_Carrier      0.0  4.472136   8.426150  5.196152   5.916080           0.0   \n",
       "Fam1_Carrier      1.0  2.236068  13.190906  7.280110   8.366600           0.0   \n",
       "Fam2_Carrier      1.0  2.645751   9.848858  7.937254  10.198039           0.0   \n",
       "Fam1_HPAH_P3      1.0  3.872983  10.198039  5.291503   7.000000           0.0   \n",
       "Fam1_HPAH_P2      1.0  3.872983  11.874342  8.426150  10.862780           0.0   \n",
       "Fam1_Ctrl         1.0  3.162278  11.090537  4.358899   4.898979           0.0   \n",
       "Fam2_Ctrl         0.0  6.324555  10.630146  5.000000   5.567764           0.0   \n",
       "Fam2_HPAH         1.0  2.236068   7.874008  4.358899   5.656854           0.0   \n",
       "Fam3_Ctrl         0.0  5.196152  10.099505  4.898979   6.928203           0.0   \n",
       "\n",
       "               snoZ185     snoZ5  \n",
       "Fam1_HPAH_P1  0.000000  0.000000  \n",
       "Fam3_HPAH     0.000000  0.000000  \n",
       "Fam3_Carrier  0.000000  2.000000  \n",
       "Fam1_Carrier  0.000000  1.414214  \n",
       "Fam2_Carrier  0.000000  0.000000  \n",
       "Fam1_HPAH_P3  1.414214  0.000000  \n",
       "Fam1_HPAH_P2  0.000000  0.000000  \n",
       "Fam1_Ctrl     0.000000  0.000000  \n",
       "Fam2_Ctrl     0.000000  1.414214  \n",
       "Fam2_HPAH     0.000000  1.000000  \n",
       "Fam3_Ctrl     0.000000  2.236068  \n",
       "\n",
       "[11 rows x 34706 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iPSC_data_sq = scprep.transform.sqrt(iPSC_data)\n",
    "iPSC_data_sq"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "alien-chassis",
   "metadata": {},
   "source": [
    "## Imputation and the Netflix Problem (Denoising data using MAGIC):\n",
    "- Imputation covers a set of approaches for taking missing values in a matrix (e.g. a counts matrix of genes by cells) and filling them in."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "trying-vertical",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "pc_op = PCA()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "confirmed-allah",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: magic-impute in /root/.local/lib/python3.8/site-packages (3.0.0)\n",
      "Requirement already satisfied: graphtools>=1.4.0 in /root/.local/lib/python3.8/site-packages (from magic-impute) (1.5.2)\n",
      "Requirement already satisfied: scprep>=1.0 in /root/.local/lib/python3.8/site-packages (from magic-impute) (1.1.0)\n",
      "Requirement already satisfied: numpy>=1.14.0 in /opt/python/lib/python3.8/site-packages (from magic-impute) (1.19.5)\n",
      "Requirement already satisfied: pandas>=0.25 in /opt/python/lib/python3.8/site-packages (from magic-impute) (1.2.0)\n",
      "Requirement already satisfied: matplotlib in /opt/python/lib/python3.8/site-packages (from magic-impute) (3.3.3)\n",
      "Requirement already satisfied: scipy>=1.1.0 in /opt/python/lib/python3.8/site-packages (from magic-impute) (1.6.0)\n",
      "Requirement already satisfied: scikit-learn>=0.19.1 in /opt/python/lib/python3.8/site-packages (from magic-impute) (0.24.0)\n",
      "Requirement already satisfied: tasklogger>=1.0.0 in /root/.local/lib/python3.8/site-packages (from magic-impute) (1.0.0)\n",
      "Requirement already satisfied: future in /opt/python/lib/python3.8/site-packages (from magic-impute) (0.18.2)\n",
      "Requirement already satisfied: pygsp>=0.5.1 in /root/.local/lib/python3.8/site-packages (from graphtools>=1.4.0->magic-impute) (0.5.1)\n",
      "Requirement already satisfied: Deprecated in /root/.local/lib/python3.8/site-packages (from graphtools>=1.4.0->magic-impute) (1.2.12)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /opt/python/lib/python3.8/site-packages (from pandas>=0.25->magic-impute) (2.8.1)\n",
      "Requirement already satisfied: pytz>=2017.3 in /opt/python/lib/python3.8/site-packages (from pandas>=0.25->magic-impute) (2020.5)\n",
      "Requirement already satisfied: six>=1.5 in /opt/python/lib/python3.8/site-packages (from python-dateutil>=2.7.3->pandas>=0.25->magic-impute) (1.15.0)\n",
      "Requirement already satisfied: joblib>=0.11 in /opt/python/lib/python3.8/site-packages (from scikit-learn>=0.19.1->magic-impute) (1.0.0)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /opt/python/lib/python3.8/site-packages (from scikit-learn>=0.19.1->magic-impute) (2.1.0)\n",
      "Requirement already satisfied: decorator>=4.3.0 in /opt/python/lib/python3.8/site-packages (from scprep>=1.0->magic-impute) (4.4.2)\n",
      "Requirement already satisfied: packaging in /opt/python/lib/python3.8/site-packages (from scprep>=1.0->magic-impute) (20.8)\n",
      "Requirement already satisfied: wrapt<2,>=1.10 in /opt/python/lib/python3.8/site-packages (from Deprecated->graphtools>=1.4.0->magic-impute) (1.12.1)\n",
      "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /opt/python/lib/python3.8/site-packages (from matplotlib->magic-impute) (2.4.7)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/python/lib/python3.8/site-packages (from matplotlib->magic-impute) (1.3.1)\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/python/lib/python3.8/site-packages (from matplotlib->magic-impute) (0.10.0)\n",
      "Requirement already satisfied: pillow>=6.2.0 in /opt/python/lib/python3.8/site-packages (from matplotlib->magic-impute) (8.1.0)\n",
      "\u001b[33mWARNING: You are using pip version 20.3.3; however, version 21.0.1 is available.\n",
      "You should consider upgrading via the '/opt/python/bin/python3.8 -m pip install --upgrade pip' command.\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install --user magic-impute"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "artistic-mystery",
   "metadata": {},
   "outputs": [],
   "source": [
    "import magic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "becoming-british",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "pc_op = PCA()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "pointed-brunswick",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Calculating MAGIC...\n",
      "  Running MAGIC on 11 cells and 34706 genes.\n",
      "  Calculating graph and diffusion operator...\n",
      "    Calculating PCA...\n",
      "    Calculated PCA in 0.11 seconds.\n",
      "    Calculating KNN search...\n",
      "    Calculating affinities...\n",
      "  Calculated graph and diffusion operator in 2.50 seconds.\n",
      "  Calculating imputation...\n",
      "Calculated MAGIC in 4.87 seconds.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>5S_rRNA</th>\n",
       "      <th>7SK</th>\n",
       "      <th>A1BG</th>\n",
       "      <th>A1BG-AS1</th>\n",
       "      <th>A1CF</th>\n",
       "      <th>A2M</th>\n",
       "      <th>A2M-AS1</th>\n",
       "      <th>A2ML1</th>\n",
       "      <th>A2MP1</th>\n",
       "      <th>A3GALT2</th>\n",
       "      <th>...</th>\n",
       "      <th>hsa-mir-8072</th>\n",
       "      <th>snR65</th>\n",
       "      <th>snoR442</th>\n",
       "      <th>snoU109</th>\n",
       "      <th>snoU13</th>\n",
       "      <th>snoU2-30</th>\n",
       "      <th>snoU2_19</th>\n",
       "      <th>snoZ13_snr52</th>\n",
       "      <th>snoZ185</th>\n",
       "      <th>snoZ5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P1</th>\n",
       "      <td>1.441336</td>\n",
       "      <td>10.213705</td>\n",
       "      <td>1.948149</td>\n",
       "      <td>7.248074</td>\n",
       "      <td>0.097478</td>\n",
       "      <td>63.735523</td>\n",
       "      <td>2.732261</td>\n",
       "      <td>0.608818</td>\n",
       "      <td>0.734730</td>\n",
       "      <td>0.174956</td>\n",
       "      <td>...</td>\n",
       "      <td>3.002683</td>\n",
       "      <td>0.194314</td>\n",
       "      <td>0.518407</td>\n",
       "      <td>3.752760</td>\n",
       "      <td>10.141872</td>\n",
       "      <td>5.731330</td>\n",
       "      <td>7.050887</td>\n",
       "      <td>0.091127</td>\n",
       "      <td>0.119086</td>\n",
       "      <td>0.748487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_HPAH</th>\n",
       "      <td>1.426961</td>\n",
       "      <td>10.140777</td>\n",
       "      <td>1.975307</td>\n",
       "      <td>7.274259</td>\n",
       "      <td>0.092930</td>\n",
       "      <td>62.168377</td>\n",
       "      <td>2.669258</td>\n",
       "      <td>0.602888</td>\n",
       "      <td>0.718088</td>\n",
       "      <td>0.175439</td>\n",
       "      <td>...</td>\n",
       "      <td>2.975615</td>\n",
       "      <td>0.182594</td>\n",
       "      <td>0.514482</td>\n",
       "      <td>3.756853</td>\n",
       "      <td>10.078985</td>\n",
       "      <td>5.696532</td>\n",
       "      <td>7.005110</td>\n",
       "      <td>0.102361</td>\n",
       "      <td>0.127845</td>\n",
       "      <td>0.732369</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Carrier</th>\n",
       "      <td>1.427934</td>\n",
       "      <td>10.151830</td>\n",
       "      <td>1.972647</td>\n",
       "      <td>7.273839</td>\n",
       "      <td>0.093684</td>\n",
       "      <td>62.464604</td>\n",
       "      <td>2.680750</td>\n",
       "      <td>0.604348</td>\n",
       "      <td>0.721765</td>\n",
       "      <td>0.174946</td>\n",
       "      <td>...</td>\n",
       "      <td>2.978958</td>\n",
       "      <td>0.184801</td>\n",
       "      <td>0.514985</td>\n",
       "      <td>3.758210</td>\n",
       "      <td>10.087812</td>\n",
       "      <td>5.703153</td>\n",
       "      <td>7.015063</td>\n",
       "      <td>0.100272</td>\n",
       "      <td>0.127242</td>\n",
       "      <td>0.733998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Carrier</th>\n",
       "      <td>1.459253</td>\n",
       "      <td>10.247724</td>\n",
       "      <td>1.922563</td>\n",
       "      <td>7.207659</td>\n",
       "      <td>0.099139</td>\n",
       "      <td>63.788277</td>\n",
       "      <td>2.753466</td>\n",
       "      <td>0.610209</td>\n",
       "      <td>0.735465</td>\n",
       "      <td>0.177265</td>\n",
       "      <td>...</td>\n",
       "      <td>3.027093</td>\n",
       "      <td>0.196192</td>\n",
       "      <td>0.520971</td>\n",
       "      <td>3.733553</td>\n",
       "      <td>10.186642</td>\n",
       "      <td>5.743358</td>\n",
       "      <td>7.055207</td>\n",
       "      <td>0.088602</td>\n",
       "      <td>0.108239</td>\n",
       "      <td>0.763372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Carrier</th>\n",
       "      <td>1.432446</td>\n",
       "      <td>10.226404</td>\n",
       "      <td>1.946534</td>\n",
       "      <td>7.244600</td>\n",
       "      <td>0.098838</td>\n",
       "      <td>64.666278</td>\n",
       "      <td>2.723666</td>\n",
       "      <td>0.603669</td>\n",
       "      <td>0.725428</td>\n",
       "      <td>0.172590</td>\n",
       "      <td>...</td>\n",
       "      <td>2.984538</td>\n",
       "      <td>0.194734</td>\n",
       "      <td>0.516876</td>\n",
       "      <td>3.758772</td>\n",
       "      <td>10.110059</td>\n",
       "      <td>5.728138</td>\n",
       "      <td>7.054362</td>\n",
       "      <td>0.092073</td>\n",
       "      <td>0.120037</td>\n",
       "      <td>0.754149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P3</th>\n",
       "      <td>1.421195</td>\n",
       "      <td>10.145971</td>\n",
       "      <td>1.983691</td>\n",
       "      <td>7.293137</td>\n",
       "      <td>0.093190</td>\n",
       "      <td>62.615466</td>\n",
       "      <td>2.677172</td>\n",
       "      <td>0.606376</td>\n",
       "      <td>0.718494</td>\n",
       "      <td>0.173945</td>\n",
       "      <td>...</td>\n",
       "      <td>2.973323</td>\n",
       "      <td>0.184686</td>\n",
       "      <td>0.517280</td>\n",
       "      <td>3.766603</td>\n",
       "      <td>10.082264</td>\n",
       "      <td>5.706052</td>\n",
       "      <td>7.025241</td>\n",
       "      <td>0.098835</td>\n",
       "      <td>0.133012</td>\n",
       "      <td>0.727632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_HPAH_P2</th>\n",
       "      <td>1.426294</td>\n",
       "      <td>10.162839</td>\n",
       "      <td>1.976261</td>\n",
       "      <td>7.287591</td>\n",
       "      <td>0.094448</td>\n",
       "      <td>62.750844</td>\n",
       "      <td>2.694378</td>\n",
       "      <td>0.609060</td>\n",
       "      <td>0.718391</td>\n",
       "      <td>0.174208</td>\n",
       "      <td>...</td>\n",
       "      <td>2.981081</td>\n",
       "      <td>0.186407</td>\n",
       "      <td>0.519768</td>\n",
       "      <td>3.762325</td>\n",
       "      <td>10.104835</td>\n",
       "      <td>5.720748</td>\n",
       "      <td>7.043749</td>\n",
       "      <td>0.095956</td>\n",
       "      <td>0.129251</td>\n",
       "      <td>0.732161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam1_Ctrl</th>\n",
       "      <td>1.444965</td>\n",
       "      <td>10.118318</td>\n",
       "      <td>1.975342</td>\n",
       "      <td>7.279864</td>\n",
       "      <td>0.089895</td>\n",
       "      <td>60.435545</td>\n",
       "      <td>2.679661</td>\n",
       "      <td>0.610905</td>\n",
       "      <td>0.725998</td>\n",
       "      <td>0.181889</td>\n",
       "      <td>...</td>\n",
       "      <td>3.005874</td>\n",
       "      <td>0.180023</td>\n",
       "      <td>0.520508</td>\n",
       "      <td>3.741371</td>\n",
       "      <td>10.136513</td>\n",
       "      <td>5.707243</td>\n",
       "      <td>7.005799</td>\n",
       "      <td>0.100544</td>\n",
       "      <td>0.126183</td>\n",
       "      <td>0.720497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_Ctrl</th>\n",
       "      <td>1.429413</td>\n",
       "      <td>10.224887</td>\n",
       "      <td>1.950620</td>\n",
       "      <td>7.249589</td>\n",
       "      <td>0.099563</td>\n",
       "      <td>64.773613</td>\n",
       "      <td>2.717853</td>\n",
       "      <td>0.604375</td>\n",
       "      <td>0.725664</td>\n",
       "      <td>0.171144</td>\n",
       "      <td>...</td>\n",
       "      <td>2.983537</td>\n",
       "      <td>0.193470</td>\n",
       "      <td>0.514598</td>\n",
       "      <td>3.766877</td>\n",
       "      <td>10.108955</td>\n",
       "      <td>5.721627</td>\n",
       "      <td>7.045493</td>\n",
       "      <td>0.092481</td>\n",
       "      <td>0.120577</td>\n",
       "      <td>0.757153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam2_HPAH</th>\n",
       "      <td>1.428343</td>\n",
       "      <td>10.242926</td>\n",
       "      <td>1.944343</td>\n",
       "      <td>7.237563</td>\n",
       "      <td>0.100541</td>\n",
       "      <td>65.363095</td>\n",
       "      <td>2.727701</td>\n",
       "      <td>0.602548</td>\n",
       "      <td>0.724388</td>\n",
       "      <td>0.169834</td>\n",
       "      <td>...</td>\n",
       "      <td>2.980166</td>\n",
       "      <td>0.197134</td>\n",
       "      <td>0.515663</td>\n",
       "      <td>3.762587</td>\n",
       "      <td>10.102542</td>\n",
       "      <td>5.727754</td>\n",
       "      <td>7.057562</td>\n",
       "      <td>0.091191</td>\n",
       "      <td>0.119295</td>\n",
       "      <td>0.761099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fam3_Ctrl</th>\n",
       "      <td>1.431581</td>\n",
       "      <td>10.230979</td>\n",
       "      <td>1.946892</td>\n",
       "      <td>7.243761</td>\n",
       "      <td>0.099889</td>\n",
       "      <td>64.835803</td>\n",
       "      <td>2.724365</td>\n",
       "      <td>0.604316</td>\n",
       "      <td>0.727206</td>\n",
       "      <td>0.171325</td>\n",
       "      <td>...</td>\n",
       "      <td>2.985965</td>\n",
       "      <td>0.194865</td>\n",
       "      <td>0.515062</td>\n",
       "      <td>3.763425</td>\n",
       "      <td>10.113752</td>\n",
       "      <td>5.724782</td>\n",
       "      <td>7.049150</td>\n",
       "      <td>0.091782</td>\n",
       "      <td>0.118950</td>\n",
       "      <td>0.758605</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11 rows × 34706 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               5S_rRNA        7SK      A1BG  A1BG-AS1      A1CF        A2M  \\\n",
       "Fam1_HPAH_P1  1.441336  10.213705  1.948149  7.248074  0.097478  63.735523   \n",
       "Fam3_HPAH     1.426961  10.140777  1.975307  7.274259  0.092930  62.168377   \n",
       "Fam3_Carrier  1.427934  10.151830  1.972647  7.273839  0.093684  62.464604   \n",
       "Fam1_Carrier  1.459253  10.247724  1.922563  7.207659  0.099139  63.788277   \n",
       "Fam2_Carrier  1.432446  10.226404  1.946534  7.244600  0.098838  64.666278   \n",
       "Fam1_HPAH_P3  1.421195  10.145971  1.983691  7.293137  0.093190  62.615466   \n",
       "Fam1_HPAH_P2  1.426294  10.162839  1.976261  7.287591  0.094448  62.750844   \n",
       "Fam1_Ctrl     1.444965  10.118318  1.975342  7.279864  0.089895  60.435545   \n",
       "Fam2_Ctrl     1.429413  10.224887  1.950620  7.249589  0.099563  64.773613   \n",
       "Fam2_HPAH     1.428343  10.242926  1.944343  7.237563  0.100541  65.363095   \n",
       "Fam3_Ctrl     1.431581  10.230979  1.946892  7.243761  0.099889  64.835803   \n",
       "\n",
       "               A2M-AS1     A2ML1     A2MP1   A3GALT2  ...  hsa-mir-8072  \\\n",
       "Fam1_HPAH_P1  2.732261  0.608818  0.734730  0.174956  ...      3.002683   \n",
       "Fam3_HPAH     2.669258  0.602888  0.718088  0.175439  ...      2.975615   \n",
       "Fam3_Carrier  2.680750  0.604348  0.721765  0.174946  ...      2.978958   \n",
       "Fam1_Carrier  2.753466  0.610209  0.735465  0.177265  ...      3.027093   \n",
       "Fam2_Carrier  2.723666  0.603669  0.725428  0.172590  ...      2.984538   \n",
       "Fam1_HPAH_P3  2.677172  0.606376  0.718494  0.173945  ...      2.973323   \n",
       "Fam1_HPAH_P2  2.694378  0.609060  0.718391  0.174208  ...      2.981081   \n",
       "Fam1_Ctrl     2.679661  0.610905  0.725998  0.181889  ...      3.005874   \n",
       "Fam2_Ctrl     2.717853  0.604375  0.725664  0.171144  ...      2.983537   \n",
       "Fam2_HPAH     2.727701  0.602548  0.724388  0.169834  ...      2.980166   \n",
       "Fam3_Ctrl     2.724365  0.604316  0.727206  0.171325  ...      2.985965   \n",
       "\n",
       "                 snR65   snoR442   snoU109     snoU13  snoU2-30  snoU2_19  \\\n",
       "Fam1_HPAH_P1  0.194314  0.518407  3.752760  10.141872  5.731330  7.050887   \n",
       "Fam3_HPAH     0.182594  0.514482  3.756853  10.078985  5.696532  7.005110   \n",
       "Fam3_Carrier  0.184801  0.514985  3.758210  10.087812  5.703153  7.015063   \n",
       "Fam1_Carrier  0.196192  0.520971  3.733553  10.186642  5.743358  7.055207   \n",
       "Fam2_Carrier  0.194734  0.516876  3.758772  10.110059  5.728138  7.054362   \n",
       "Fam1_HPAH_P3  0.184686  0.517280  3.766603  10.082264  5.706052  7.025241   \n",
       "Fam1_HPAH_P2  0.186407  0.519768  3.762325  10.104835  5.720748  7.043749   \n",
       "Fam1_Ctrl     0.180023  0.520508  3.741371  10.136513  5.707243  7.005799   \n",
       "Fam2_Ctrl     0.193470  0.514598  3.766877  10.108955  5.721627  7.045493   \n",
       "Fam2_HPAH     0.197134  0.515663  3.762587  10.102542  5.727754  7.057562   \n",
       "Fam3_Ctrl     0.194865  0.515062  3.763425  10.113752  5.724782  7.049150   \n",
       "\n",
       "              snoZ13_snr52   snoZ185     snoZ5  \n",
       "Fam1_HPAH_P1      0.091127  0.119086  0.748487  \n",
       "Fam3_HPAH         0.102361  0.127845  0.732369  \n",
       "Fam3_Carrier      0.100272  0.127242  0.733998  \n",
       "Fam1_Carrier      0.088602  0.108239  0.763372  \n",
       "Fam2_Carrier      0.092073  0.120037  0.754149  \n",
       "Fam1_HPAH_P3      0.098835  0.133012  0.727632  \n",
       "Fam1_HPAH_P2      0.095956  0.129251  0.732161  \n",
       "Fam1_Ctrl         0.100544  0.126183  0.720497  \n",
       "Fam2_Ctrl         0.092481  0.120577  0.757153  \n",
       "Fam2_HPAH         0.091191  0.119295  0.761099  \n",
       "Fam3_Ctrl         0.091782  0.118950  0.758605  \n",
       "\n",
       "[11 rows x 34706 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "magic_operator = magic.MAGIC(knn=5, knn_max= 9, solver='approximate', n_pca = 9)\n",
    "iPSC_data_magic = magic_operator.fit_transform(iPSC_data_sq)\n",
    "iPSC_data_magic\n",
    "\n",
    "#magic_operator = magic.MAGIC()\n",
    "#iPSC_data_magic = magic_operator.fit_transform(iPSC_data_sq)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "typical-investment",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "express-resort",
   "metadata": {},
   "outputs": [],
   "source": [
    "pc_op = PCA()\n",
    "scaler = StandardScaler() \n",
    "iPSC_scaled =scaler.fit_transform(iPSC_data_magic)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "union-range",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Fam1_HPAH_P1</th>\n",
       "      <th>Fam3_HPAH</th>\n",
       "      <th>Fam3_Carrier</th>\n",
       "      <th>Fam1_Carrier</th>\n",
       "      <th>Fam2_Carrier</th>\n",
       "      <th>Fam1_HPAH_P3</th>\n",
       "      <th>Fam1_HPAH_P2</th>\n",
       "      <th>Fam1_Ctrl</th>\n",
       "      <th>Fam2_Ctrl</th>\n",
       "      <th>Fam2_HPAH</th>\n",
       "      <th>Fam3_Ctrl</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5S_rRNA</th>\n",
       "      <td>0.602060</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.477121</td>\n",
       "      <td>0.778151</td>\n",
       "      <td>0.845098</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.778151</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.301030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7SK</th>\n",
       "      <td>2.064458</td>\n",
       "      <td>1.869232</td>\n",
       "      <td>1.919078</td>\n",
       "      <td>2.100371</td>\n",
       "      <td>2.079181</td>\n",
       "      <td>1.857332</td>\n",
       "      <td>2.004321</td>\n",
       "      <td>1.875061</td>\n",
       "      <td>2.178977</td>\n",
       "      <td>2.164353</td>\n",
       "      <td>2.012837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A1BG</th>\n",
       "      <td>0.602060</td>\n",
       "      <td>0.602060</td>\n",
       "      <td>0.778151</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.079181</td>\n",
       "      <td>0.903090</td>\n",
       "      <td>0.845098</td>\n",
       "      <td>0.698970</td>\n",
       "      <td>0.778151</td>\n",
       "      <td>0.778151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A1BG-AS1</th>\n",
       "      <td>1.778151</td>\n",
       "      <td>1.748188</td>\n",
       "      <td>1.491362</td>\n",
       "      <td>1.397940</td>\n",
       "      <td>1.748188</td>\n",
       "      <td>1.819544</td>\n",
       "      <td>2.017033</td>\n",
       "      <td>1.770852</td>\n",
       "      <td>1.851258</td>\n",
       "      <td>1.204120</td>\n",
       "      <td>1.869232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A1CF</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.301030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoU2-30</th>\n",
       "      <td>1.579784</td>\n",
       "      <td>1.301030</td>\n",
       "      <td>1.447158</td>\n",
       "      <td>1.732394</td>\n",
       "      <td>1.806180</td>\n",
       "      <td>1.462398</td>\n",
       "      <td>1.857332</td>\n",
       "      <td>1.301030</td>\n",
       "      <td>1.414973</td>\n",
       "      <td>1.301030</td>\n",
       "      <td>1.397940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoU2_19</th>\n",
       "      <td>1.724276</td>\n",
       "      <td>1.414973</td>\n",
       "      <td>1.556303</td>\n",
       "      <td>1.851258</td>\n",
       "      <td>2.021189</td>\n",
       "      <td>1.698970</td>\n",
       "      <td>2.075547</td>\n",
       "      <td>1.397940</td>\n",
       "      <td>1.505150</td>\n",
       "      <td>1.518514</td>\n",
       "      <td>1.690196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoZ13_snr52</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoZ185</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.477121</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snoZ5</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.698970</td>\n",
       "      <td>0.477121</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.477121</td>\n",
       "      <td>0.301030</td>\n",
       "      <td>0.778151</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34706 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Fam1_HPAH_P1  Fam3_HPAH  Fam3_Carrier  Fam1_Carrier  \\\n",
       "id                                                                  \n",
       "5S_rRNA           0.602060   0.301030      0.477121      0.778151   \n",
       "7SK               2.064458   1.869232      1.919078      2.100371   \n",
       "A1BG              0.602060   0.602060      0.778151      0.301030   \n",
       "A1BG-AS1          1.778151   1.748188      1.491362      1.397940   \n",
       "A1CF              0.000000   0.000000      0.000000      0.000000   \n",
       "...                    ...        ...           ...           ...   \n",
       "snoU2-30          1.579784   1.301030      1.447158      1.732394   \n",
       "snoU2_19          1.724276   1.414973      1.556303      1.851258   \n",
       "snoZ13_snr52      0.000000   0.301030      0.000000      0.000000   \n",
       "snoZ185           0.000000   0.000000      0.000000      0.000000   \n",
       "snoZ5             0.000000   0.000000      0.698970      0.477121   \n",
       "\n",
       "              Fam2_Carrier  Fam1_HPAH_P3  Fam1_HPAH_P2  Fam1_Ctrl  Fam2_Ctrl  \\\n",
       "id                                                                             \n",
       "5S_rRNA           0.845098      0.301030      0.301030   0.778151   0.301030   \n",
       "7SK               2.079181      1.857332      2.004321   1.875061   2.178977   \n",
       "A1BG              0.000000      1.079181      0.903090   0.845098   0.698970   \n",
       "A1BG-AS1          1.748188      1.819544      2.017033   1.770852   1.851258   \n",
       "A1CF              0.000000      0.000000      0.000000   0.000000   0.000000   \n",
       "...                    ...           ...           ...        ...        ...   \n",
       "snoU2-30          1.806180      1.462398      1.857332   1.301030   1.414973   \n",
       "snoU2_19          2.021189      1.698970      2.075547   1.397940   1.505150   \n",
       "snoZ13_snr52      0.000000      0.000000      0.000000   0.000000   0.000000   \n",
       "snoZ185           0.000000      0.477121      0.000000   0.000000   0.000000   \n",
       "snoZ5             0.000000      0.000000      0.000000   0.000000   0.477121   \n",
       "\n",
       "              Fam2_HPAH  Fam3_Ctrl  \n",
       "id                                  \n",
       "5S_rRNA        0.301030   0.301030  \n",
       "7SK            2.164353   2.012837  \n",
       "A1BG           0.778151   0.778151  \n",
       "A1BG-AS1       1.204120   1.869232  \n",
       "A1CF           0.000000   0.301030  \n",
       "...                 ...        ...  \n",
       "snoU2-30       1.301030   1.397940  \n",
       "snoU2_19       1.518514   1.690196  \n",
       "snoZ13_snr52   0.000000   0.000000  \n",
       "snoZ185        0.000000   0.000000  \n",
       "snoZ5          0.301030   0.778151  \n",
       "\n",
       "[34706 rows x 11 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iPSC_scaled_T = scaler.fit_transform(iPSC_data_magic).T\n",
    "iPSC_data_T_log"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "herbal-frederick",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "genes_per_cell = np.sum(iPSC_scaled_T > 0, axis=0)\n",
    "\n",
    "fig, ax = plt.subplots(1, figsize=(8,8))\n",
    "ax.hist(iPSC_scaled_T, bins=50)\n",
    "ax.set_xlabel('Genes')\n",
    "ax.set_ylabel('Frequency')\n",
    "ax.set_yscale('symlog')\n",
    "ax.set_title('Gene detection across Samples')\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "photographic-pasta",
   "metadata": {},
   "source": [
    "### Visualization (Principle Component Analysis): \n",
    "#### Heatmaps (seaborn):\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ecological-romantic",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "clean-prisoner",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ceramic-recording",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: fastcluster in /opt/python/lib/python3.8/site-packages (1.1.28)\n",
      "Requirement already satisfied: numpy>=1.9 in /opt/python/lib/python3.8/site-packages (from fastcluster) (1.19.5)\n",
      "\u001b[33mWARNING: You are using pip version 20.3.3; however, version 21.0.1 is available.\n",
      "You should consider upgrading via the '/opt/python/bin/python3.8 -m pip install --upgrade pip' command.\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install fastcluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "narrative-individual",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "three-prospect",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaled =scaler.fit_transform(iPSC_data_magic)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "serial-output",
   "metadata": {},
   "source": [
    "# Error: Not working "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "reduced-airplane",
   "metadata": {},
   "outputs": [],
   "source": [
    "#cg = sns.clustermap(scaled, cmap='inferno', xticklabels=[], yticklabels=[], standard_scale = 1)\n",
    "#cg.ax_heatmap.set_xlabel('Genes ({})'.format(scaled.shape[1]))\n",
    "#cg.ax_heatmap.set_ylabel('Samples ({})'.format(scaled.shape[0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "improved-conducting",
   "metadata": {},
   "source": [
    "### Reduction (PCA)\n",
    "- Doing multiplication or inversion of matrices with 1,000+ dimensions gets very slow and takes up a lot of memory so we typically only store 100-500 PCs and use this for downstream analysis. \n",
    "- PCA gives us a quantification of how much variance we’ve lost by removing some of the final principal components. This means we can figure out how many we need to capture 99.999% of the variance in a dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "psychological-fraction",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, figsize=(5,5))\n",
    "\n",
    "ax.scatter(scaled[:,0], scaled[:,1], s=20)\n",
    "ax.set_xlabel('PC1')\n",
    "ax.set_ylabel('PC2')\n",
    "ax.set_title('T-cell - PCA')\n",
    "\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "patent-worse",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7fddef596820>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X = pc_op.fit_transform(iPSC_data_magic.values.T)\n",
    "X.shape \n",
    "plt.scatter(X[:,0], X[:,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "coordinate-threat",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
